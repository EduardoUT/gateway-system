/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mx.grupogateway.view;

import com.formdev.flatlaf.FlatDarkLaf;
import com.mx.grupogateway.user.UserController;
import com.mx.grupogateway.user.User;
import com.mx.grupogateway.util.ValidacionJPasswordField;
import com.mx.grupogateway.util.IconoVentana;
import java.awt.event.MouseEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author eduar
 */
public class ActualizarPassword extends javax.swing.JFrame {

    private JFrame jFrame;
    private UserController userController;
    private User user;

    public ActualizarPassword() {
        initComponents();
        iniciarProcesos();
    }

    private void iniciarProcesos() {
        cargarIconoVentana();
        this.userController = new UserController();
    }

    private void cargarIconoVentana() {
        this.setIconImage(IconoVentana.getIconoVentana());
    }

    protected void setUser(User user) {
        this.user = user;
    }

    protected void setJFrame(JFrame jFrame) {
        this.jFrame = jFrame;
    }

    private JFrame getJFrame() {
        return this.jFrame;
    }

    private boolean sonCamposValidos() {
        return passwordActual.getPassword().length != 0
                && nuevaPassword.getPassword().length != 0
                && checkPassword.getPassword().length != 0
                && ValidacionJPasswordField.esPasswordSimilar(nuevaPassword,
                        checkPassword);
    }

    private void limpiarRegistros() {
        passwordActual.setText("");
        nuevaPassword.setText("");
        checkPassword.setText("");
    }

    private void actualizarPassword() {
        if (sonCamposValidos()) {
            consultarPasswordActual();
        } else {
            JOptionPane.showMessageDialog(null,
                    "Por favor, llene correctamente el formulario.",
                    "Formulario incompleto",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void consultarPasswordActual() {
        user.setPassword(String.valueOf(
                passwordActual.getPassword()
        ), false);
        boolean passwordValida
                = this.userController.esPasswordValida(user);
        if (passwordValida) {
            user.setPassword(String.valueOf(checkPassword.getPassword()), false);
            int registrosAfectados = this.userController.actualizarPassword(user);
            if (registrosAfectados > 0) {
                JOptionPane.showMessageDialog(null,
                        "Usuario actualizado éxitosamente.",
                        "Actualización de contraseña éxitosa.",
                        JOptionPane.INFORMATION_MESSAGE);
                limpiarRegistros();
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "La contraseña actual es incorrecta.",
                    "Contraseña incorrecta.",
                    JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        seccionActualizarPassword = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        nuevaPassword = new javax.swing.JPasswordField();
        reglasPassword = new javax.swing.JLabel();
        confirmar = new javax.swing.JButton();
        checkPassword = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        labelCheckPassword = new javax.swing.JLabel();
        passwordActual = new javax.swing.JPasswordField();
        labelNuevaPassword = new javax.swing.JLabel();
        checkBoxNuevaPassword = new javax.swing.JCheckBox();
        checkBoxPasswordActual = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configurar Perfil");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Actualizar contraseña");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel9.setText("Contraseña Actual:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel10.setText("Nueva Contraseña:");

        nuevaPassword.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        nuevaPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nuevaPasswordKeyReleased(evt);
            }
        });

        reglasPassword.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        reglasPassword.setText("<html>Al menos 8 carácteres, debe tener almenos 1 mayúscula, 1 minúscula<br> y carácteres especiales.</html>");

        confirmar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        confirmar.setText("Confirmar");
        confirmar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmarMouseClicked(evt);
            }
        });

        checkPassword.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        checkPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                checkPasswordKeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel11.setText("Comprobar Contraseña:");

        labelCheckPassword.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        labelCheckPassword.setText("Estado");

        passwordActual.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        labelNuevaPassword.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        labelNuevaPassword.setText("Estado");

        checkBoxNuevaPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        checkBoxNuevaPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ojoCerrado.png"))); // NOI18N
        checkBoxNuevaPassword.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ojoAbierto.png"))); // NOI18N
        checkBoxNuevaPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxNuevaPasswordActionPerformed(evt);
            }
        });

        checkBoxPasswordActual.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        checkBoxPasswordActual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ojoCerrado.png"))); // NOI18N
        checkBoxPasswordActual.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ojoAbierto.png"))); // NOI18N
        checkBoxPasswordActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxPasswordActualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout seccionActualizarPasswordLayout = new javax.swing.GroupLayout(seccionActualizarPassword);
        seccionActualizarPassword.setLayout(seccionActualizarPasswordLayout);
        seccionActualizarPasswordLayout.setHorizontalGroup(
            seccionActualizarPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seccionActualizarPasswordLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(seccionActualizarPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                    .addComponent(jLabel11)
                    .addComponent(labelNuevaPassword)
                    .addComponent(labelCheckPassword)
                    .addGroup(seccionActualizarPasswordLayout.createSequentialGroup()
                        .addGroup(seccionActualizarPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(passwordActual, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nuevaPassword, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reglasPassword, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkPassword, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(seccionActualizarPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkBoxNuevaPassword)
                            .addComponent(checkBoxPasswordActual))))
                .addContainerGap())
            .addGroup(seccionActualizarPasswordLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(confirmar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        seccionActualizarPasswordLayout.setVerticalGroup(
            seccionActualizarPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seccionActualizarPasswordLayout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(seccionActualizarPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passwordActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxPasswordActual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(seccionActualizarPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevaPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxNuevaPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelNuevaPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reglasPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelCheckPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(confirmar)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(seccionActualizarPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(seccionActualizarPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void confirmarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmarMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            actualizarPassword();
        }
    }//GEN-LAST:event_confirmarMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        evt.getID();
        getJFrame().setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void checkBoxNuevaPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxNuevaPasswordActionPerformed
        evt.getID();
        ValidacionJPasswordField.visualizacionPassword(
                checkBoxNuevaPassword, nuevaPassword
        );
    }//GEN-LAST:event_checkBoxNuevaPasswordActionPerformed

    private void nuevaPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nuevaPasswordKeyReleased
        evt.getID();
        ValidacionJPasswordField.evaluarCampoPassword(
                nuevaPassword, labelNuevaPassword
        );
    }//GEN-LAST:event_nuevaPasswordKeyReleased

    private void checkPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkPasswordKeyReleased
        evt.getID();
        ValidacionJPasswordField.concidePassword(
                nuevaPassword, checkPassword, labelCheckPassword
        );
    }//GEN-LAST:event_checkPasswordKeyReleased

    private void checkBoxPasswordActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxPasswordActualActionPerformed
        evt.getID();
        ValidacionJPasswordField.visualizacionPassword(
                checkBoxPasswordActual, passwordActual
        );
    }//GEN-LAST:event_checkBoxPasswordActualActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatDarkLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ActualizarPassword().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBoxNuevaPassword;
    private javax.swing.JCheckBox checkBoxPasswordActual;
    private javax.swing.JPasswordField checkPassword;
    private javax.swing.JButton confirmar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelCheckPassword;
    private javax.swing.JLabel labelNuevaPassword;
    private javax.swing.JPasswordField nuevaPassword;
    private javax.swing.JPasswordField passwordActual;
    private javax.swing.JLabel reglasPassword;
    private javax.swing.JPanel seccionActualizarPassword;
    // End of variables declaration//GEN-END:variables
}
